{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { ErrorComponent } from '../error/error/error.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./token.service\";\nimport * as i3 from \"@angular/router\";\nexport class AuthServiceService {\n  constructor(http, tokenService, router) {\n    this.http = http;\n    this.tokenService = tokenService;\n    this.router = router;\n    this.usernameSubject = new BehaviorSubject(null);\n    this.username$ = this.usernameSubject.asObservable();\n  }\n  signup(uname, upass, ufirst, ulast, ucont) {\n    this.http.post('https://localhost:3000/api/user', {\n      username: uname,\n      password: upass,\n      firstname: ufirst,\n      lastname: ulast,\n      contact: ucont\n    }, {\n      responseType: 'text'\n    }).subscribe(response => {\n      this.router.navigate(['/login']); // navigate to LoginComponent after successful signup\n    });\n  }\n\n  login(uname, upass) {\n    this.http.post('https://localhost:3000/api/auth', {\n      username: uname,\n      password: upass\n    }).subscribe(respose => {\n      const token = respose.token;\n      this.tokenService.setToken(token);\n      localStorage.setItem('username', uname); // save the username\n      this.router.navigate(['/home']); // navigate to PostDisplayComponent after successful login\n    }, error => {\n      this.dialog.open(ErrorComponent, {\n        data: {\n          message: 'Username or Password invalid'\n        }\n      });\n    });\n  }\n  isLoggedIn() {\n    return this.tokenService.getToken() != null;\n  }\n  logout() {\n    this.tokenService.removeToken();\n    localStorage.removeItem('username'); // remove the username\n    this.usernameSubject.next(null); // update the username observable\n    this.router.navigate(['/login']); // navigate to LoginComponent after successful logout\n  }\n  static #_ = this.ɵfac = function AuthServiceService_Factory(t) {\n    return new (t || AuthServiceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokenService), i0.ɵɵinject(i3.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthServiceService,\n    factory: AuthServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","ErrorComponent","AuthServiceService","constructor","http","tokenService","router","usernameSubject","username$","asObservable","signup","uname","upass","ufirst","ulast","ucont","post","username","password","firstname","lastname","contact","responseType","subscribe","response","navigate","login","respose","token","setToken","localStorage","setItem","error","dialog","open","data","message","isLoggedIn","getToken","logout","removeToken","removeItem","next","_","i0","ɵɵinject","i1","HttpClient","i2","TokenService","i3","Router","_2","factory","ɵfac","providedIn"],"sources":["D:\\2023\\Semester 2\\APDS7311\\POE\\Jo Saul APDS7311 POE\\FRONTEND\\frontend\\src\\app\\auth\\auth-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TokenService } from './token.service';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ErrorComponent } from '../error/error/error.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceService {\n\n  private token!: string;\n  private usernameSubject = new BehaviorSubject<string | null>(null);\n  username$ = this.usernameSubject.asObservable();\n\n  constructor(private http: HttpClient, private tokenService: TokenService, private router: Router) { }\n\n  signup (uname:string, upass:string, ufirst:string, ulast:string, ucont:string)\n  {\n    this.http.post('https://localhost:3000/api/user', {\n      username:uname,\n      password:upass,\n      firstname:ufirst,\n      lastname:ulast,\n      contact:ucont\n    }, {responseType: 'text'})\n    .subscribe(response =>{\n      this.router.navigate(['/login']); // navigate to LoginComponent after successful signup\n    });\n  }\n\n  login (uname:string, upass:string)\n{\n  this.http.post<{token:string}>('https://localhost:3000/api/auth',{\n    username:uname,\n    password:upass\n  })\n  .subscribe(respose =>{\n    const token = respose.token;\n    this.tokenService.setToken(token);\n    localStorage.setItem('username', uname); // save the username\n    this.router.navigate(['/home']); // navigate to PostDisplayComponent after successful login\n  }, error => {\n    this.dialog.open(ErrorComponent, {data: {message: 'Username or Password invalid'}});\n  })\n}\n\n  isLoggedIn() {\n    return this.tokenService.getToken() != null;\n  }\n\n  logout() {\n    this.tokenService.removeToken();\n    localStorage.removeItem('username'); // remove the username\n    this.usernameSubject.next(null); // update the username observable\n    this.router.navigate(['/login']); // navigate to LoginComponent after successful logout\n  }\n}\n\n"],"mappings":"AAIA,SAASA,eAAe,QAAQ,MAAM;AAEtC,SAASC,cAAc,QAAQ,gCAAgC;;;;;AAK/D,OAAM,MAAOC,kBAAkB;EAM7BC,YAAoBC,IAAgB,EAAUC,YAA0B,EAAUC,MAAc;IAA5E,KAAAF,IAAI,GAAJA,IAAI;IAAsB,KAAAC,YAAY,GAAZA,YAAY;IAAwB,KAAAC,MAAM,GAANA,MAAM;IAHhF,KAAAC,eAAe,GAAG,IAAIP,eAAe,CAAgB,IAAI,CAAC;IAClE,KAAAQ,SAAS,GAAG,IAAI,CAACD,eAAe,CAACE,YAAY,EAAE;EAEqD;EAEpGC,MAAMA,CAAEC,KAAY,EAAEC,KAAY,EAAEC,MAAa,EAAEC,KAAY,EAAEC,KAAY;IAE3E,IAAI,CAACX,IAAI,CAACY,IAAI,CAAC,iCAAiC,EAAE;MAChDC,QAAQ,EAACN,KAAK;MACdO,QAAQ,EAACN,KAAK;MACdO,SAAS,EAACN,MAAM;MAChBO,QAAQ,EAACN,KAAK;MACdO,OAAO,EAACN;KACT,EAAE;MAACO,YAAY,EAAE;IAAM,CAAC,CAAC,CACzBC,SAAS,CAACC,QAAQ,IAAG;MACpB,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC;EACJ;;EAEAC,KAAKA,CAAEf,KAAY,EAAEC,KAAY;IAEjC,IAAI,CAACR,IAAI,CAACY,IAAI,CAAiB,iCAAiC,EAAC;MAC/DC,QAAQ,EAACN,KAAK;MACdO,QAAQ,EAACN;KACV,CAAC,CACDW,SAAS,CAACI,OAAO,IAAG;MACnB,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK;MAC3B,IAAI,CAACvB,YAAY,CAACwB,QAAQ,CAACD,KAAK,CAAC;MACjCE,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEpB,KAAK,CAAC,CAAC,CAAC;MACzC,IAAI,CAACL,MAAM,CAACmB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC,EAAEO,KAAK,IAAG;MACT,IAAI,CAACC,MAAM,CAACC,IAAI,CAACjC,cAAc,EAAE;QAACkC,IAAI,EAAE;UAACC,OAAO,EAAE;QAA8B;MAAC,CAAC,CAAC;IACrF,CAAC,CAAC;EACJ;EAEEC,UAAUA,CAAA;IACR,OAAO,IAAI,CAAChC,YAAY,CAACiC,QAAQ,EAAE,IAAI,IAAI;EAC7C;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAAClC,YAAY,CAACmC,WAAW,EAAE;IAC/BV,YAAY,CAACW,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;IACrC,IAAI,CAAClC,eAAe,CAACmC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACjC,IAAI,CAACpC,MAAM,CAACmB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC;EAAC,QAAAkB,CAAA,G;qBA/CUzC,kBAAkB,EAAA0C,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,YAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBlD,kBAAkB;IAAAmD,OAAA,EAAlBnD,kBAAkB,CAAAoD,IAAA;IAAAC,UAAA,EAFjB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}