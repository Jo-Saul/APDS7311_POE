{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./token.service\";\nimport * as i3 from \"@angular/router\";\nexport class AuthServiceService {\n  constructor(http, tokenService, router) {\n    this.http = http;\n    this.tokenService = tokenService;\n    this.router = router;\n  }\n  signup(uname, upass, ufirst, ulast, ucont) {\n    this.http.post('https://localhost:3000/api/user', {\n      username: uname,\n      password: upass,\n      firstname: ufirst,\n      lastname: ulast,\n      contact: ucont\n    }).subscribe(response => {});\n  }\n  login(uname, upass) {\n    this.http.post('https://localhost:3000/api/auth', {\n      username: uname,\n      password: upass\n    }).subscribe(respose => {\n      const token = respose.token;\n      this.tokenService.setToken(token);\n      this.router.navigate(['/home']); // navigate to PostDisplayComponent after successful login\n    });\n  }\n  static #_ = this.ɵfac = function AuthServiceService_Factory(t) {\n    return new (t || AuthServiceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokenService), i0.ɵɵinject(i3.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthServiceService,\n    factory: AuthServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthServiceService","constructor","http","tokenService","router","signup","uname","upass","ufirst","ulast","ucont","post","username","password","firstname","lastname","contact","subscribe","response","login","respose","token","setToken","navigate","_","i0","ɵɵinject","i1","HttpClient","i2","TokenService","i3","Router","_2","factory","ɵfac","providedIn"],"sources":["D:\\2023\\Semester 2\\APDS7311\\POE\\Jo Saul APDS7311 POE\\FRONTEND\\frontend\\src\\app\\auth\\auth-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TokenService } from './token.service';\nimport { Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceService {\n\n  private token!: string;\n\n  constructor(private http: HttpClient, private tokenService: TokenService, private router: Router) { }\n\n  signup (uname:string, upass:string, ufirst:string, ulast:string, ucont:string)\n  {\n    this.http.post('https://localhost:3000/api/user', {\n      username:uname,\n      password:upass,\n      firstname:ufirst,\n      lastname:ulast,\n      contact:ucont\n    })\n    .subscribe(response =>{\n    });\n  }\n\n  login (uname:string, upass:string)\n  {\n    this.http.post<{token:string}>('https://localhost:3000/api/auth',{\n      username:uname,\n      password:upass\n    })\n    .subscribe(respose =>{\n      const token = respose.token;\n      this.tokenService.setToken(token);\n      this.router.navigate(['/home']); // navigate to PostDisplayComponent after successful login\n    })\n  }\n}\n"],"mappings":";;;;AASA,OAAM,MAAOA,kBAAkB;EAI7BC,YAAoBC,IAAgB,EAAUC,YAA0B,EAAUC,MAAc;IAA5E,KAAAF,IAAI,GAAJA,IAAI;IAAsB,KAAAC,YAAY,GAAZA,YAAY;IAAwB,KAAAC,MAAM,GAANA,MAAM;EAAY;EAEpGC,MAAMA,CAAEC,KAAY,EAAEC,KAAY,EAAEC,MAAa,EAAEC,KAAY,EAAEC,KAAY;IAE3E,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,iCAAiC,EAAE;MAChDC,QAAQ,EAACN,KAAK;MACdO,QAAQ,EAACN,KAAK;MACdO,SAAS,EAACN,MAAM;MAChBO,QAAQ,EAACN,KAAK;MACdO,OAAO,EAACN;KACT,CAAC,CACDO,SAAS,CAACC,QAAQ,IAAG,CACtB,CAAC,CAAC;EACJ;EAEAC,KAAKA,CAAEb,KAAY,EAAEC,KAAY;IAE/B,IAAI,CAACL,IAAI,CAACS,IAAI,CAAiB,iCAAiC,EAAC;MAC/DC,QAAQ,EAACN,KAAK;MACdO,QAAQ,EAACN;KACV,CAAC,CACDU,SAAS,CAACG,OAAO,IAAG;MACnB,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK;MAC3B,IAAI,CAAClB,YAAY,CAACmB,QAAQ,CAACD,KAAK,CAAC;MACjC,IAAI,CAACjB,MAAM,CAACmB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBA9BUxB,kBAAkB,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,YAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBjC,kBAAkB;IAAAkC,OAAA,EAAlBlC,kBAAkB,CAAAmC,IAAA;IAAAC,UAAA,EAFjB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}