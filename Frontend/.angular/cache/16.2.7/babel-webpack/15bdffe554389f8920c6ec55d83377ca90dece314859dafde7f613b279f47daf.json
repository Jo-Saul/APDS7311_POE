{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../auth-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.usernameValidationMessage);\n  }\n}\nfunction LoginComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.passwordValidationMessage);\n  }\n}\nexport class LoginComponent {\n  //constructor\n  constructor(authservice, router, fb) {\n    this.authservice = authservice;\n    this.router = router;\n    this.fb = fb;\n  }\n  //initialization\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      enteredUsername: ['', [Validators.required, Validators.minLength(1)]],\n      enteredPassword: ['', [Validators.required, Validators.minLength(1)]]\n    });\n  }\n  get enteredUsername() {\n    return this.loginForm.get('enteredUsername');\n  }\n  get enteredPassword() {\n    return this.loginForm.get('enteredPassword');\n  }\n  get usernameValidationMessage() {\n    if (this.enteredUsername?.errors?.['required']) {\n      return 'Username is required';\n    }\n    return '';\n  }\n  get passwordValidationMessage() {\n    if (this.enteredPassword?.errors?.['required']) {\n      return 'Password is required';\n    }\n    return '';\n  }\n  //login\n  onlogin() {\n    if (this.loginForm.invalid) {\n      if (!this.loginForm.value.enteredUsername || !this.loginForm.value.enteredPassword) {\n        alert('Please fill in all the required fields');\n      } else {\n        alert('Invalid');\n      }\n      return;\n    } else {\n      this.authservice.login(this.loginForm.value.enteredUsername, this.loginForm.value.enteredPassword);\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthServiceService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 20,\n    vars: 3,\n    consts: [[1, \"d-flex\", \"justify-content-between\", \"align-items-center\"], [\"routerLink\", \"/signup\", 1, \"btn\", \"btn-primary\"], [1, \"input-width\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"enteredUsername\", 1, \"col-form-label\", \"mt-4\"], [\"type\", \"text\", \"formControlName\", \"enteredUsername\", \"id\", \"enteredUsername\", \"placeholder\", \"Enter username\", \"required\", \"\", \"minlength\", \"1\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"enteredPassword\", 1, \"col-form-label\", \"mt-4\"], [\"type\", \"password\", \"formControlName\", \"enteredPassword\", \"id\", \"enteredPassword\", \"placeholder\", \"Enter password\", \"required\", \"\", \"minlength\", \"1\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"text-danger\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 1);\n        i0.ɵɵtext(4, \"Sign Up\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(5, \"hr\");\n        i0.ɵɵelementStart(6, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.onlogin();\n        });\n        i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\", 4);\n        i0.ɵɵtext(9, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, LoginComponent_div_11_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementStart(12, \"div\", 3)(13, \"label\", 7);\n        i0.ɵɵtext(14, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, LoginComponent_div_16_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelement(17, \"br\");\n        i0.ɵɵelementStart(18, \"button\", 9);\n        i0.ɵɵtext(19, \"Login\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.usernameValidationMessage);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.passwordValidationMessage);\n      }\n    },\n    dependencies: [i4.NgIf, i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MinLengthValidator, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\".input-width[_ngcontent-%COMP%] {\\n    max-width: 400px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0VBQ2xCIiwic291cmNlc0NvbnRlbnQiOlsiLmlucHV0LXdpZHRoIHtcclxuICAgIG1heC13aWR0aDogNDAwcHg7XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","usernameValidationMessage","ctx_r1","passwordValidationMessage","LoginComponent","constructor","authservice","router","fb","ngOnInit","loginForm","group","enteredUsername","required","minLength","enteredPassword","get","errors","onlogin","invalid","value","alert","login","_","ɵɵdirectiveInject","i1","AuthServiceService","i2","Router","i3","FormBuilder","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","LoginComponent_Template_form_ngSubmit_6_listener","ɵɵtemplate","LoginComponent_div_11_Template","LoginComponent_div_16_Template","ɵɵproperty"],"sources":["D:\\2023\\Semester 2\\APDS7311\\POE\\Jo Saul APDS7311 POE\\FRONTEND\\frontend\\src\\app\\auth\\login\\login\\login.component.ts","D:\\2023\\Semester 2\\APDS7311\\POE\\Jo Saul APDS7311 POE\\FRONTEND\\frontend\\src\\app\\auth\\login\\login\\login.component.html"],"sourcesContent":["//login componet - used to login user\n\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthServiceService } from '../../auth-service.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit{\n\n  //constructor\n  constructor (public authservice: AuthServiceService, private router: Router, private fb: FormBuilder) {}\n\n  loginForm!: FormGroup;\n\n  //initialization\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      enteredUsername: ['', [Validators.required, Validators.minLength(1)]],\n      enteredPassword: ['', [Validators.required, Validators.minLength(1)]]\n    });\n  }\n\n  get enteredUsername() {\n    return this.loginForm.get('enteredUsername');\n  }\n\n  get enteredPassword() {\n    return this.loginForm.get('enteredPassword');\n  }\n\n  get usernameValidationMessage() {\n    if (this.enteredUsername?.errors?.['required']) {\n      return 'Username is required';\n    }\n    return '';\n  }\n  \n  get passwordValidationMessage() {\n    if (this.enteredPassword?.errors?.['required']) {\n      return 'Password is required';\n    }\n    return '';\n  }\n  \n\n  //login\n  onlogin() {\n    if (this.loginForm.invalid) {\n      if (!this.loginForm.value.enteredUsername || !this.loginForm.value.enteredPassword) {\n        alert('Please fill in all the required fields');\n      } else {\n        alert('Invalid');\n      }\n      return;\n    } else {\n      this.authservice.login(this.loginForm.value.enteredUsername, this.loginForm.value.enteredPassword);\n    }\n  }\n}\n","<!--HTML for Login-->\n<div class=\"d-flex justify-content-between align-items-center\">\n\n  <!--Title-->\n  <h1>Login</h1>\n\n  <!--Sign Up Botton-->\n  <button class=\"btn btn-primary\" routerLink=\"/signup\">Sign Up</button>\n\n</div>\n<hr>\n\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onlogin()\" class=\"input-width\">\n\n  <!--Username-->\n  <div class=\"form-group\">\n      <label class=\"col-form-label mt-4\" for=\"enteredUsername\">Username</label>\n      <input type=\"text\"\n      formControlName=\"enteredUsername\"\n      id=\"enteredUsername\"\n      placeholder=\"Enter username\"\n      required\n      minlength=\"1\"\n      class=\"form-control\"/>\n  </div>\n  <div *ngIf=\"usernameValidationMessage\" class=\"text-danger\">{{ usernameValidationMessage }}</div>\n\n  <!--Password-->\n  <div class=\"form-group\">\n      <label class=\"col-form-label mt-4\" for=\"enteredPassword\">Password</label>\n      <input type=\"password\"\n      formControlName=\"enteredPassword\"\n      id=\"enteredPassword\"\n      placeholder=\"Enter password\"\n      required\n      minlength=\"1\"\n      class=\"form-control\"/>\n  </div>\n  <div *ngIf=\"passwordValidationMessage\" class=\"text-danger\">{{ passwordValidationMessage }}</div>\n\n  <br>\n\n  <!--Login Button-->\n  <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}